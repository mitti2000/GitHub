package ch.zbw.prgf.menus;

import javax.swing.JFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;

import java.awt.AWTException;
import java.awt.BorderLayout;
import java.awt.FlowLayout;
import java.awt.Menu;
import java.awt.MenuItem;
import java.awt.PopupMenu;
import java.awt.SystemTray;
import java.awt.TrayIcon;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.io.IOException;

import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JPanel;
import javax.swing.JPopupMenu;
import javax.swing.KeyStroke;
import javax.swing.border.EmptyBorder;

public class Menues extends JFrame implements ActionListener{
	
	//*** Definieren der Menukomponenten ***
	private JMenuBar menubar1;
	private JMenu menu1, submenu, menu2;
	private JMenuItem menuitem1, menuitem2, menuitem3, submenuitem1, submenuitem2;
	private JPopupMenu popUp1;
	private JMenuItem popMenu1, popMenu2, popMenu3;
	
	//*** Initialisieren der Menukomponenten
	private void initComponents() {
		
		//Erstellen der MenuBar
		menubar1 = new JMenuBar();
		
		//Erstellen eines Menus. Setze den Mnemonic Key auf "M"
		menu1 = new JMenu("Menü 1");
		menu1.setMnemonic(KeyEvent.VK_M);
		
		//Erstellen von 3 Menuitems mit der entsprechenden Nummer als Mnemonic (im Konstruktor oder ausserhalb)
		menuitem1 = new JMenuItem("Menü Item 1");
		menuitem1.setMnemonic(KeyEvent.VK_1);
		menuitem2 = new JMenuItem("Menü Item 2");
		menuitem2.setMnemonic(KeyEvent.VK_2);
		menuitem3 = new JMenuItem("Menü Item 3", KeyEvent.VK_3);
		
		//Erstellen eines Subemenus
		submenu = new JMenu("Submenü 1");
		
		//Erstellen von Menuitems für das Submenu
		submenuitem1 = new JMenuItem("SubMenü Item 1");
		submenuitem2 = new JMenuItem("SubMenü Item 2");
		
		//Erstellen eines zweiten Menus
		menu2 = new JMenu("Menu2");
		menu2.setMnemonic(KeyEvent.VK_2);
		
		//Erstellen eines PopUpMenus
		popUp1 = new JPopupMenu();
		
		//Erstellen von 3 Menuitems für das PopUpMenu
		popMenu1 = new JMenuItem("PopUpMenu 1");
		popMenu2 = new JMenuItem("PopUpMenu 2");
		popMenu3 = new JMenuItem("PopUpMenu 3");
	}
	
	
	//ActionListeners einbinden
	private void bindListener(){
		menuitem1.addActionListener(this);
		menuitem2.addActionListener(this);
		menuitem3.addActionListener(this);
		submenuitem1.addActionListener(this);
		submenuitem2.addActionListener(this);
		popMenu1.addActionListener(this);
		popMenu2.addActionListener(this);
		popMenu3.addActionListener(this);
	}
	
	public void buildMenu(){
		// Menü Struktur aufbauen
		menubar1.add(menu1);
		menu1.add(menuitem1);
		menu1.add(menuitem2);
		menu1.add(menuitem3);
		menu1.addSeparator();
		menu1.add(submenu);
		submenu.add(submenuitem1);
		submenu.add(submenuitem2);
		menubar1.add(menu2);
		
		//Accelerator setzen
		menuitem1.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_1, ActionEvent.ALT_MASK));
		menuitem3.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_3, ActionEvent.ALT_MASK));
		submenuitem2.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_2, ActionEvent.ALT_MASK));

		// java.net.URL imageURL = this.getClass().getResource("/Smiley.png");
		java.net.URL imageURL = this.getClass().getResource("/16x16.png");
		ImageIcon image = new ImageIcon(imageURL);
		menuitem2.setIcon(image);
	}
	
	
	
	private void initGui(){		
		// Frame initialisieren
		this.setDefaultCloseOperation(EXIT_ON_CLOSE);
		setLayout(new FlowLayout());
		setSize(400,400);
		this.setJMenuBar(menubar1);
				
		setVisible(true);	
	}
	
	public Menues(){
		initComponents();
		bindListener();
		buildMenu();
		initGui();
	}
	
	public static void main(String[] args){
		Menues a1 = new Menues();
	}

	public void actionPerformed(ActionEvent event) {
		JMenuItem clicked = (JMenuItem)event.getSource();
		System.out.println("Menü " + clicked.getText() + " wurde ausgewählt.");
	}
	
	class PopUpListener extends MouseAdapter{
		public void mousePressed(MouseEvent e) {
	        maybeShowPopup(e);
	    }

	    public void mouseReleased(MouseEvent e) {
	        maybeShowPopup(e);
	    }

	    private void maybeShowPopup(MouseEvent e) {
	        if (e.isPopupTrigger()) {
	            popup.show(e.getComponent(),
	                       e.getX(), e.getY());
	        }
	    } 
	}
}
