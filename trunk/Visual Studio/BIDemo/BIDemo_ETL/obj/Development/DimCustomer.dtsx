<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="11/15/2010 11:27:44 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="CFBI05"
  DTS:CreatorName="CF001\rcain"
  DTS:DTSID="{8263A0A3-F2DC-418D-81EE-C7DD9279267B}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="14.0.0800.98"
  DTS:LocaleID="1033"
  DTS:ObjectName="DimCustomer"
  DTS:PackageType="5"
  DTS:VersionBuild="34"
  DTS:VersionGUID="{70F41C74-8B08-4E7B-8E64-541E2DDC9FA5}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B7219213-134E-47F3-990F-BA074D78EC3D}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SQL_Source">
      <DTS:VariableValue
        DTS:DataType="8">SELECT ca.[CustomerID], ca.[AddressID], a.[CountryRegion], a.[StateProvince], a.[City], c.[CompanyName], c.ModifiedDate FROM [AdventureWorksLT2008R2].[SalesLT].[CustomerAddress] ca INNER JOIN [AdventureWorksLT2008R2].SalesLT.[Address] a ON ca.[AddressID] = a.[AddressID] INNER JOIN [AdventureWorksLT2008R2].SalesLT.Customer c ON ca.[CustomerID] = c.[CustomerID]</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A3ED4409-B847-4A83-9A49-E510705EE586}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="VAR_LastImportDate">
      <DTS:VariableValue
        DTS:DataType="7">11/15/2010 12:02:37 PM</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\DimCustomer - DFT - Add rows to Customer Dimension"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{727E502D-1932-46BC-9527-907738B975F6}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="DimCustomer - DFT - Add rows to Customer Dimension"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server v10; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          BLOBTempStoragePath=""
          bufferTempStoragePath=""
          version="1">
          <components>
            <component
              refId="Package\DimCustomer - DFT - Add rows to Customer Dimension\DST - New record, insert it"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SqlServer v10; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="DST - New record, insert it"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[BI].[DimCustomer]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\DimCustomer - DFT - Add rows to Customer Dimension\DST - New record, insert it.Connections[OleDbConnection]"
                  connectionManagerID="{B2D4726A-E3A4-4D6E-B4D0-1AB49E8A20D3}:external"
                  connectionManagerRefId="Project.ConnectionManagers[AdventureWorksDWH]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\DimCustomer - DFT - Add rows to Customer Dimension\DST - New record, insert it.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\DimCustomer - DFT - Add rows to Customer Dimension\DST - New record, insert it.Inputs[OLE DB Destination Input].Columns[CustomerID]"
                      cachedDataType="i4"
                      cachedName="CustomerID"
                      externalMetadataColumnId="Package\DimCustomer - DFT - Add rows to Customer Dimension\DST - New record, insert it.Inputs[OLE DB Destination Input].ExternalColumns[CustomerID]"
                      lineageId="Package\DimCustomer - DFT - Add rows to Customer Dimension\SRC - Customer Data.Outputs[OLE DB Source Output].Columns[CustomerID]" />
                    <inputColumn
                      refId="Package\DimCustomer - DFT - Add rows to Customer Dimension\DST - New record, insert it.Inputs[OLE DB Destination Input].Columns[AddressID]"
                      cachedDataType="i4"
                      cachedName="AddressID"
                      externalMetadataColumnId="Package\DimCustomer - DFT - Add rows to Customer Dimension\DST - New record, insert it.Inputs[OLE DB Destination Input].ExternalColumns[AddressID]"
                      lineageId="Package\DimCustomer - DFT - Add rows to Customer Dimension\SRC - Customer Data.Outputs[OLE DB Source Output].Columns[AddressID]" />
                    <inputColumn
                      refId="Package\DimCustomer - DFT - Add rows to Customer Dimension\DST - New record, insert it.Inputs[OLE DB Destination Input].Columns[CountryRegion]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CountryRegion"
                      externalMetadataColumnId="Package\DimCustomer - DFT - Add rows to Customer Dimension\DST - New record, insert it.Inputs[OLE DB Destination Input].ExternalColumns[CountryRegion]"
                      lineageId="Package\DimCustomer - DFT - Add rows to Customer Dimension\SRC - Customer Data.Outputs[OLE DB Source Output].Columns[CountryRegion]" />
                    <inputColumn
                      refId="Package\DimCustomer - DFT - Add rows to Customer Dimension\DST - New record, insert it.Inputs[OLE DB Destination Input].Columns[StateProvince]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="StateProvince"
                      externalMetadataColumnId="Package\DimCustomer - DFT - Add rows to Customer Dimension\DST - New record, insert it.Inputs[OLE DB Destination Input].ExternalColumns[StateProvince]"
                      lineageId="Package\DimCustomer - DFT - Add rows to Customer Dimension\SRC - Customer Data.Outputs[OLE DB Source Output].Columns[StateProvince]" />
                    <inputColumn
                      refId="Package\DimCustomer - DFT - Add rows to Customer Dimension\DST - New record, insert it.Inputs[OLE DB Destination Input].Columns[City]"
                      cachedDataType="wstr"
                      cachedLength="30"
                      cachedName="City"
                      externalMetadataColumnId="Package\DimCustomer - DFT - Add rows to Customer Dimension\DST - New record, insert it.Inputs[OLE DB Destination Input].ExternalColumns[City]"
                      lineageId="Package\DimCustomer - DFT - Add rows to Customer Dimension\SRC - Customer Data.Outputs[OLE DB Source Output].Columns[City]" />
                    <inputColumn
                      refId="Package\DimCustomer - DFT - Add rows to Customer Dimension\DST - New record, insert it.Inputs[OLE DB Destination Input].Columns[PersonName]"
                      cachedDataType="wstr"
                      cachedLength="101"
                      cachedName="PersonName"
                      externalMetadataColumnId="Package\DimCustomer - DFT - Add rows to Customer Dimension\DST - New record, insert it.Inputs[OLE DB Destination Input].ExternalColumns[PersonName]"
                      lineageId="Package\DimCustomer - DFT - Add rows to Customer Dimension\SRC - Customer Data.Outputs[OLE DB Source Output].Columns[PersonName]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\DimCustomer - DFT - Add rows to Customer Dimension\DST - New record, insert it.Inputs[OLE DB Destination Input].ExternalColumns[DimCustomerID]"
                      dataType="i4"
                      name="DimCustomerID" />
                    <externalMetadataColumn
                      refId="Package\DimCustomer - DFT - Add rows to Customer Dimension\DST - New record, insert it.Inputs[OLE DB Destination Input].ExternalColumns[CustomerID]"
                      dataType="i4"
                      name="CustomerID" />
                    <externalMetadataColumn
                      refId="Package\DimCustomer - DFT - Add rows to Customer Dimension\DST - New record, insert it.Inputs[OLE DB Destination Input].ExternalColumns[AddressID]"
                      dataType="i4"
                      name="AddressID" />
                    <externalMetadataColumn
                      refId="Package\DimCustomer - DFT - Add rows to Customer Dimension\DST - New record, insert it.Inputs[OLE DB Destination Input].ExternalColumns[CountryRegion]"
                      dataType="wstr"
                      length="50"
                      name="CountryRegion" />
                    <externalMetadataColumn
                      refId="Package\DimCustomer - DFT - Add rows to Customer Dimension\DST - New record, insert it.Inputs[OLE DB Destination Input].ExternalColumns[StateProvince]"
                      dataType="wstr"
                      length="50"
                      name="StateProvince" />
                    <externalMetadataColumn
                      refId="Package\DimCustomer - DFT - Add rows to Customer Dimension\DST - New record, insert it.Inputs[OLE DB Destination Input].ExternalColumns[City]"
                      dataType="wstr"
                      length="30"
                      name="City" />
                    <externalMetadataColumn
                      refId="Package\DimCustomer - DFT - Add rows to Customer Dimension\DST - New record, insert it.Inputs[OLE DB Destination Input].ExternalColumns[PersonName]"
                      dataType="wstr"
                      length="128"
                      name="PersonName" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DimCustomer - DFT - Add rows to Customer Dimension\DST - New record, insert it.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\DimCustomer - DFT - Add rows to Customer Dimension\DST - New record, insert it.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DimCustomer - DFT - Add rows to Customer Dimension\DST - New record, insert it.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\DimCustomer - DFT - Add rows to Customer Dimension\DST - New record, insert it.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\DimCustomer - DFT - Add rows to Customer Dimension\DST - New record, insert it.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\DimCustomer - DFT - Add rows to Customer Dimension\DST - New record, insert it.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DimCustomer - DFT - Add rows to Customer Dimension\DST - Record exists, stage it for later update"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SqlServer v10; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="DST - Record exists, stage it for later update"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[Staging].[DimCustomer]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\DimCustomer - DFT - Add rows to Customer Dimension\DST - Record exists, stage it for later update.Connections[OleDbConnection]"
                  connectionManagerID="{B2D4726A-E3A4-4D6E-B4D0-1AB49E8A20D3}:external"
                  connectionManagerRefId="Project.ConnectionManagers[AdventureWorksDWH]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\DimCustomer - DFT - Add rows to Customer Dimension\DST - Record exists, stage it for later update.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\DimCustomer - DFT - Add rows to Customer Dimension\DST - Record exists, stage it for later update.Inputs[OLE DB Destination Input].Columns[CustomerID]"
                      cachedDataType="i4"
                      cachedName="CustomerID"
                      externalMetadataColumnId="Package\DimCustomer - DFT - Add rows to Customer Dimension\DST - Record exists, stage it for later update.Inputs[OLE DB Destination Input].ExternalColumns[CustomerID]"
                      lineageId="Package\DimCustomer - DFT - Add rows to Customer Dimension\SRC - Customer Data.Outputs[OLE DB Source Output].Columns[CustomerID]" />
                    <inputColumn
                      refId="Package\DimCustomer - DFT - Add rows to Customer Dimension\DST - Record exists, stage it for later update.Inputs[OLE DB Destination Input].Columns[AddressID]"
                      cachedDataType="i4"
                      cachedName="AddressID"
                      externalMetadataColumnId="Package\DimCustomer - DFT - Add rows to Customer Dimension\DST - Record exists, stage it for later update.Inputs[OLE DB Destination Input].ExternalColumns[AddressID]"
                      lineageId="Package\DimCustomer - DFT - Add rows to Customer Dimension\SRC - Customer Data.Outputs[OLE DB Source Output].Columns[AddressID]" />
                    <inputColumn
                      refId="Package\DimCustomer - DFT - Add rows to Customer Dimension\DST - Record exists, stage it for later update.Inputs[OLE DB Destination Input].Columns[CountryRegion]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CountryRegion"
                      externalMetadataColumnId="Package\DimCustomer - DFT - Add rows to Customer Dimension\DST - Record exists, stage it for later update.Inputs[OLE DB Destination Input].ExternalColumns[CountryRegion]"
                      lineageId="Package\DimCustomer - DFT - Add rows to Customer Dimension\SRC - Customer Data.Outputs[OLE DB Source Output].Columns[CountryRegion]" />
                    <inputColumn
                      refId="Package\DimCustomer - DFT - Add rows to Customer Dimension\DST - Record exists, stage it for later update.Inputs[OLE DB Destination Input].Columns[StateProvince]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="StateProvince"
                      externalMetadataColumnId="Package\DimCustomer - DFT - Add rows to Customer Dimension\DST - Record exists, stage it for later update.Inputs[OLE DB Destination Input].ExternalColumns[StateProvince]"
                      lineageId="Package\DimCustomer - DFT - Add rows to Customer Dimension\SRC - Customer Data.Outputs[OLE DB Source Output].Columns[StateProvince]" />
                    <inputColumn
                      refId="Package\DimCustomer - DFT - Add rows to Customer Dimension\DST - Record exists, stage it for later update.Inputs[OLE DB Destination Input].Columns[City]"
                      cachedDataType="wstr"
                      cachedLength="30"
                      cachedName="City"
                      externalMetadataColumnId="Package\DimCustomer - DFT - Add rows to Customer Dimension\DST - Record exists, stage it for later update.Inputs[OLE DB Destination Input].ExternalColumns[City]"
                      lineageId="Package\DimCustomer - DFT - Add rows to Customer Dimension\SRC - Customer Data.Outputs[OLE DB Source Output].Columns[City]" />
                    <inputColumn
                      refId="Package\DimCustomer - DFT - Add rows to Customer Dimension\DST - Record exists, stage it for later update.Inputs[OLE DB Destination Input].Columns[DimCustomerID]"
                      cachedDataType="i4"
                      cachedName="DimCustomerID"
                      externalMetadataColumnId="Package\DimCustomer - DFT - Add rows to Customer Dimension\DST - Record exists, stage it for later update.Inputs[OLE DB Destination Input].ExternalColumns[DimCustomerID]"
                      lineageId="Package\DimCustomer - DFT - Add rows to Customer Dimension\Lookup - See if customer data already in the dimension.Outputs[Lookup Match Output].Columns[DimCustomerID]" />
                    <inputColumn
                      refId="Package\DimCustomer - DFT - Add rows to Customer Dimension\DST - Record exists, stage it for later update.Inputs[OLE DB Destination Input].Columns[PersonName]"
                      cachedDataType="wstr"
                      cachedLength="101"
                      cachedName="PersonName"
                      externalMetadataColumnId="Package\DimCustomer - DFT - Add rows to Customer Dimension\DST - Record exists, stage it for later update.Inputs[OLE DB Destination Input].ExternalColumns[PersonName]"
                      lineageId="Package\DimCustomer - DFT - Add rows to Customer Dimension\SRC - Customer Data.Outputs[OLE DB Source Output].Columns[PersonName]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\DimCustomer - DFT - Add rows to Customer Dimension\DST - Record exists, stage it for later update.Inputs[OLE DB Destination Input].ExternalColumns[DimCustomerID]"
                      dataType="i4"
                      name="DimCustomerID" />
                    <externalMetadataColumn
                      refId="Package\DimCustomer - DFT - Add rows to Customer Dimension\DST - Record exists, stage it for later update.Inputs[OLE DB Destination Input].ExternalColumns[CustomerID]"
                      dataType="i4"
                      name="CustomerID" />
                    <externalMetadataColumn
                      refId="Package\DimCustomer - DFT - Add rows to Customer Dimension\DST - Record exists, stage it for later update.Inputs[OLE DB Destination Input].ExternalColumns[AddressID]"
                      dataType="i4"
                      name="AddressID" />
                    <externalMetadataColumn
                      refId="Package\DimCustomer - DFT - Add rows to Customer Dimension\DST - Record exists, stage it for later update.Inputs[OLE DB Destination Input].ExternalColumns[CountryRegion]"
                      dataType="wstr"
                      length="50"
                      name="CountryRegion" />
                    <externalMetadataColumn
                      refId="Package\DimCustomer - DFT - Add rows to Customer Dimension\DST - Record exists, stage it for later update.Inputs[OLE DB Destination Input].ExternalColumns[StateProvince]"
                      dataType="wstr"
                      length="50"
                      name="StateProvince" />
                    <externalMetadataColumn
                      refId="Package\DimCustomer - DFT - Add rows to Customer Dimension\DST - Record exists, stage it for later update.Inputs[OLE DB Destination Input].ExternalColumns[City]"
                      dataType="wstr"
                      length="30"
                      name="City" />
                    <externalMetadataColumn
                      refId="Package\DimCustomer - DFT - Add rows to Customer Dimension\DST - Record exists, stage it for later update.Inputs[OLE DB Destination Input].ExternalColumns[PersonName]"
                      dataType="wstr"
                      length="128"
                      name="PersonName" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DimCustomer - DFT - Add rows to Customer Dimension\DST - Record exists, stage it for later update.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\DimCustomer - DFT - Add rows to Customer Dimension\DST - Record exists, stage it for later update.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DimCustomer - DFT - Add rows to Customer Dimension\DST - Record exists, stage it for later update.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\DimCustomer - DFT - Add rows to Customer Dimension\DST - Record exists, stage it for later update.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\DimCustomer - DFT - Add rows to Customer Dimension\DST - Record exists, stage it for later update.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\DimCustomer - DFT - Add rows to Customer Dimension\DST - Record exists, stage it for later update.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DimCustomer - DFT - Add rows to Customer Dimension\Lookup - See if customer data already in the dimension"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SqlServer v10; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;5"
              description="Looks up values in a reference dataset by using exact matching."
              name="Lookup - See if customer data already in the dimension"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [BI].[DimCustomer]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [BI].[DimCustomer]) [refTable]
where [refTable].[CustomerID] = ? and [refTable].[AddressID] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="DimCustomerID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="CustomerID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="AddressID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="CountryRegion" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="StateProvince" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="City" dataType="DT_WSTR" length="30" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="PersonName" dataType="DT_WSTR" length="128" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\DimCustomer - DFT - Add rows to Customer Dimension\SRC - Customer Data.Outputs[OLE DB Source Output].Columns[CustomerID]};#{Package\DimCustomer - DFT - Add rows to Customer Dimension\SRC - Customer Data.Outputs[OLE DB Source Output].Columns[AddressID]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Bestimmt, ob doppelte Schlüssel in den Verweisdaten bei Verwendung des Vollcachemodus als Fehler behandelt werden sollen."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\DimCustomer - DFT - Add rows to Customer Dimension\Lookup - See if customer data already in the dimension.Connections[OleDbConnection]"
                  connectionManagerID="{B2D4726A-E3A4-4D6E-B4D0-1AB49E8A20D3}:external"
                  connectionManagerRefId="Project.ConnectionManagers[AdventureWorksDWH]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\DimCustomer - DFT - Add rows to Customer Dimension\Lookup - See if customer data already in the dimension.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\DimCustomer - DFT - Add rows to Customer Dimension\Lookup - See if customer data already in the dimension.Inputs[Lookup Input].Columns[CustomerID]"
                      cachedDataType="i4"
                      cachedName="CustomerID"
                      lineageId="Package\DimCustomer - DFT - Add rows to Customer Dimension\SRC - Customer Data.Outputs[OLE DB Source Output].Columns[CustomerID]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Gibt die Spalte in der Verweistabelle an, mit der eine Spalte verknüpft wird."
                          name="JoinToReferenceColumn">CustomerID</property>
                        <property
                          dataType="System.Null"
                          description="Gibt die Spalte in der Verweistabelle an, aus der eine Spalte kopiert ist."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\DimCustomer - DFT - Add rows to Customer Dimension\Lookup - See if customer data already in the dimension.Inputs[Lookup Input].Columns[AddressID]"
                      cachedDataType="i4"
                      cachedName="AddressID"
                      lineageId="Package\DimCustomer - DFT - Add rows to Customer Dimension\SRC - Customer Data.Outputs[OLE DB Source Output].Columns[AddressID]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Gibt die Spalte in der Verweistabelle an, mit der eine Spalte verknüpft wird."
                          name="JoinToReferenceColumn">AddressID</property>
                        <property
                          dataType="System.Null"
                          description="Gibt die Spalte in der Verweistabelle an, aus der eine Spalte kopiert ist."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DimCustomer - DFT - Add rows to Customer Dimension\Lookup - See if customer data already in the dimension.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\DimCustomer - DFT - Add rows to Customer Dimension\Lookup - See if customer data already in the dimension.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DimCustomer - DFT - Add rows to Customer Dimension\Lookup - See if customer data already in the dimension.Outputs[Lookup Match Output].Columns[DimCustomerID]"
                      dataType="i4"
                      errorOrTruncationOperation="Spalte kopieren"
                      lineageId="Package\DimCustomer - DFT - Add rows to Customer Dimension\Lookup - See if customer data already in the dimension.Outputs[Lookup Match Output].Columns[DimCustomerID]"
                      name="DimCustomerID"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Gibt die Spalte in der Verweistabelle an, aus der eine Spalte kopiert ist."
                          name="CopyFromReferenceColumn">DimCustomerID</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\DimCustomer - DFT - Add rows to Customer Dimension\Lookup - See if customer data already in the dimension.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\DimCustomer - DFT - Add rows to Customer Dimension\Lookup - See if customer data already in the dimension.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\DimCustomer - DFT - Add rows to Customer Dimension\Lookup - See if customer data already in the dimension.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\DimCustomer - DFT - Add rows to Customer Dimension\Lookup - See if customer data already in the dimension.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DimCustomer - DFT - Add rows to Customer Dimension\Lookup - See if customer data already in the dimension.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\DimCustomer - DFT - Add rows to Customer Dimension\Lookup - See if customer data already in the dimension.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\DimCustomer - DFT - Add rows to Customer Dimension\Lookup - See if customer data already in the dimension.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\DimCustomer - DFT - Add rows to Customer Dimension\Lookup - See if customer data already in the dimension.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DimCustomer - DFT - Add rows to Customer Dimension\SRC - Customer Data"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SqlServer v10; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="SRC - Customer Data"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT c.[CustomerID]
      ,isnull(a.[AddressID],0) as AddressID
      ,[CountryRegion] = isnull(cr.[Name],'')
      ,[StateProvince] = isnull(sp.[Name],'')
      ,isnull(a.[City],'') as City
      ,[PersonName]  = isnull(p.LastName,'') + ' ' + isnull(p.Firstname,'')
FROM [Person].[Person] p
    left outer JOIN [Person].[BusinessEntityAddress] bea 
    ON bea.[BusinessEntityID] = p.[BusinessEntityID] 
    left outer JOIN [Person].[Address] a 
    ON a.[AddressID] = bea.[AddressID]
    left outer JOIN [Person].[StateProvince] sp 
    ON sp.[StateProvinceID] = a.[StateProvinceID]
    left outer JOIN [Person].[CountryRegion] cr 
    ON cr.[CountryRegionCode] = sp.[CountryRegionCode]
    left outer JOIN [Person].[AddressType] at 
    ON at.[AddressTypeID] = bea.[AddressTypeID]
	left outer JOIN [Sales].[Customer] c
	ON c.[PersonID] = p.[BusinessEntityID]
	LEFT OUTER JOIN [Person].[EmailAddress] ea
	ON ea.[BusinessEntityID] = p.[BusinessEntityID]
	LEFT OUTER JOIN [Person].[PersonPhone] pp
	ON pp.[BusinessEntityID] = p.[BusinessEntityID]
	LEFT OUTER JOIN [Person].[PhoneNumberType] pnt
	ON pnt.[PhoneNumberTypeID] = pp.[PhoneNumberTypeID] where c.[CustomerID] is not null</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\DimCustomer - DFT - Add rows to Customer Dimension\SRC - Customer Data.Connections[OleDbConnection]"
                  connectionManagerID="{32954103-A72B-45A4-AE51-639F4A18FA92}:external"
                  connectionManagerRefId="Project.ConnectionManagers[AdventureWorks2016]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\DimCustomer - DFT - Add rows to Customer Dimension\SRC - Customer Data.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DimCustomer - DFT - Add rows to Customer Dimension\SRC - Customer Data.Outputs[OLE DB Source Output].Columns[CustomerID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\DimCustomer - DFT - Add rows to Customer Dimension\SRC - Customer Data.Outputs[OLE DB Source Output].ExternalColumns[CustomerID]"
                      lineageId="Package\DimCustomer - DFT - Add rows to Customer Dimension\SRC - Customer Data.Outputs[OLE DB Source Output].Columns[CustomerID]"
                      name="CustomerID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\DimCustomer - DFT - Add rows to Customer Dimension\SRC - Customer Data.Outputs[OLE DB Source Output].Columns[AddressID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\DimCustomer - DFT - Add rows to Customer Dimension\SRC - Customer Data.Outputs[OLE DB Source Output].ExternalColumns[AddressID]"
                      lineageId="Package\DimCustomer - DFT - Add rows to Customer Dimension\SRC - Customer Data.Outputs[OLE DB Source Output].Columns[AddressID]"
                      name="AddressID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\DimCustomer - DFT - Add rows to Customer Dimension\SRC - Customer Data.Outputs[OLE DB Source Output].Columns[CountryRegion]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\DimCustomer - DFT - Add rows to Customer Dimension\SRC - Customer Data.Outputs[OLE DB Source Output].ExternalColumns[CountryRegion]"
                      length="50"
                      lineageId="Package\DimCustomer - DFT - Add rows to Customer Dimension\SRC - Customer Data.Outputs[OLE DB Source Output].Columns[CountryRegion]"
                      name="CountryRegion"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\DimCustomer - DFT - Add rows to Customer Dimension\SRC - Customer Data.Outputs[OLE DB Source Output].Columns[StateProvince]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\DimCustomer - DFT - Add rows to Customer Dimension\SRC - Customer Data.Outputs[OLE DB Source Output].ExternalColumns[StateProvince]"
                      length="50"
                      lineageId="Package\DimCustomer - DFT - Add rows to Customer Dimension\SRC - Customer Data.Outputs[OLE DB Source Output].Columns[StateProvince]"
                      name="StateProvince"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\DimCustomer - DFT - Add rows to Customer Dimension\SRC - Customer Data.Outputs[OLE DB Source Output].Columns[City]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\DimCustomer - DFT - Add rows to Customer Dimension\SRC - Customer Data.Outputs[OLE DB Source Output].ExternalColumns[City]"
                      length="30"
                      lineageId="Package\DimCustomer - DFT - Add rows to Customer Dimension\SRC - Customer Data.Outputs[OLE DB Source Output].Columns[City]"
                      name="City"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\DimCustomer - DFT - Add rows to Customer Dimension\SRC - Customer Data.Outputs[OLE DB Source Output].Columns[PersonName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Konvertierung"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\DimCustomer - DFT - Add rows to Customer Dimension\SRC - Customer Data.Outputs[OLE DB Source Output].ExternalColumns[PersonName]"
                      length="101"
                      lineageId="Package\DimCustomer - DFT - Add rows to Customer Dimension\SRC - Customer Data.Outputs[OLE DB Source Output].Columns[PersonName]"
                      name="PersonName"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\DimCustomer - DFT - Add rows to Customer Dimension\SRC - Customer Data.Outputs[OLE DB Source Output].ExternalColumns[CustomerID]"
                      dataType="i4"
                      name="CustomerID" />
                    <externalMetadataColumn
                      refId="Package\DimCustomer - DFT - Add rows to Customer Dimension\SRC - Customer Data.Outputs[OLE DB Source Output].ExternalColumns[AddressID]"
                      dataType="i4"
                      name="AddressID" />
                    <externalMetadataColumn
                      refId="Package\DimCustomer - DFT - Add rows to Customer Dimension\SRC - Customer Data.Outputs[OLE DB Source Output].ExternalColumns[CountryRegion]"
                      dataType="wstr"
                      length="50"
                      name="CountryRegion" />
                    <externalMetadataColumn
                      refId="Package\DimCustomer - DFT - Add rows to Customer Dimension\SRC - Customer Data.Outputs[OLE DB Source Output].ExternalColumns[StateProvince]"
                      dataType="wstr"
                      length="50"
                      name="StateProvince" />
                    <externalMetadataColumn
                      refId="Package\DimCustomer - DFT - Add rows to Customer Dimension\SRC - Customer Data.Outputs[OLE DB Source Output].ExternalColumns[City]"
                      dataType="wstr"
                      length="30"
                      name="City" />
                    <externalMetadataColumn
                      refId="Package\DimCustomer - DFT - Add rows to Customer Dimension\SRC - Customer Data.Outputs[OLE DB Source Output].ExternalColumns[PersonName]"
                      dataType="wstr"
                      length="101"
                      name="PersonName" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\DimCustomer - DFT - Add rows to Customer Dimension\SRC - Customer Data.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DimCustomer - DFT - Add rows to Customer Dimension\SRC - Customer Data.Outputs[OLE DB Source Error Output].Columns[CustomerID]"
                      dataType="i4"
                      lineageId="Package\DimCustomer - DFT - Add rows to Customer Dimension\SRC - Customer Data.Outputs[OLE DB Source Error Output].Columns[CustomerID]"
                      name="CustomerID" />
                    <outputColumn
                      refId="Package\DimCustomer - DFT - Add rows to Customer Dimension\SRC - Customer Data.Outputs[OLE DB Source Error Output].Columns[AddressID]"
                      dataType="i4"
                      lineageId="Package\DimCustomer - DFT - Add rows to Customer Dimension\SRC - Customer Data.Outputs[OLE DB Source Error Output].Columns[AddressID]"
                      name="AddressID" />
                    <outputColumn
                      refId="Package\DimCustomer - DFT - Add rows to Customer Dimension\SRC - Customer Data.Outputs[OLE DB Source Error Output].Columns[CountryRegion]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\DimCustomer - DFT - Add rows to Customer Dimension\SRC - Customer Data.Outputs[OLE DB Source Error Output].Columns[CountryRegion]"
                      name="CountryRegion" />
                    <outputColumn
                      refId="Package\DimCustomer - DFT - Add rows to Customer Dimension\SRC - Customer Data.Outputs[OLE DB Source Error Output].Columns[StateProvince]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\DimCustomer - DFT - Add rows to Customer Dimension\SRC - Customer Data.Outputs[OLE DB Source Error Output].Columns[StateProvince]"
                      name="StateProvince" />
                    <outputColumn
                      refId="Package\DimCustomer - DFT - Add rows to Customer Dimension\SRC - Customer Data.Outputs[OLE DB Source Error Output].Columns[City]"
                      dataType="wstr"
                      length="30"
                      lineageId="Package\DimCustomer - DFT - Add rows to Customer Dimension\SRC - Customer Data.Outputs[OLE DB Source Error Output].Columns[City]"
                      name="City" />
                    <outputColumn
                      refId="Package\DimCustomer - DFT - Add rows to Customer Dimension\SRC - Customer Data.Outputs[OLE DB Source Error Output].Columns[PersonName]"
                      dataType="wstr"
                      length="101"
                      lineageId="Package\DimCustomer - DFT - Add rows to Customer Dimension\SRC - Customer Data.Outputs[OLE DB Source Error Output].Columns[PersonName]"
                      name="PersonName" />
                    <outputColumn
                      refId="Package\DimCustomer - DFT - Add rows to Customer Dimension\SRC - Customer Data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\DimCustomer - DFT - Add rows to Customer Dimension\SRC - Customer Data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\DimCustomer - DFT - Add rows to Customer Dimension\SRC - Customer Data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\DimCustomer - DFT - Add rows to Customer Dimension\SRC - Customer Data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\DimCustomer - DFT - Add rows to Customer Dimension.Paths[Lookup Match Output]"
              endId="Package\DimCustomer - DFT - Add rows to Customer Dimension\DST - Record exists, stage it for later update.Inputs[OLE DB Destination Input]"
              name="Lookup Match Output"
              startId="Package\DimCustomer - DFT - Add rows to Customer Dimension\Lookup - See if customer data already in the dimension.Outputs[Lookup Match Output]" />
            <path
              refId="Package\DimCustomer - DFT - Add rows to Customer Dimension.Paths[Lookup No Match Output]"
              endId="Package\DimCustomer - DFT - Add rows to Customer Dimension\DST - New record, insert it.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\DimCustomer - DFT - Add rows to Customer Dimension\Lookup - See if customer data already in the dimension.Outputs[Lookup No Match Output]" />
            <path
              refId="Package\DimCustomer - DFT - Add rows to Customer Dimension.Paths[OLE DB Source Output]"
              endId="Package\DimCustomer - DFT - Add rows to Customer Dimension\Lookup - See if customer data already in the dimension.Inputs[Lookup Input]"
              name="OLE DB Source Output"
              startId="Package\DimCustomer - DFT - Add rows to Customer Dimension\SRC - Customer Data.Outputs[OLE DB Source Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\DimCustomer - SQL - Add where clause to SQL_Source variable"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Skripttask"
      DTS:DTSID="{95D393FD-06B0-4939-83CB-31741F2C885B}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="DimCustomer - SQL - Add where clause to SQL_Source variable"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_7f052df551ec476c947c5b4ca21673eb"
          VSTAMajorVersion="15"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::VAR_LastImportDate"
          ReadWriteVariables="User::SQL_Source">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_7f052df551ec476c947c5b4ca21673eb.Properties.Settings.get_Default():ST_7f052df551ec476c947c5b4ca21673eb.Properties.Sett" +
    "ings")]

namespace ST_7f052df551ec476c947c5b4ca21673eb.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ST_7f052df551ec476c947c5b4ca21673eb.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{e87e322d-01c0-4454-82a7-829c76209679}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_7f052df551ec476c947c5b4ca21673eb</RootNamespace>
    <AssemblyName>ST_7f052df551ec476c947c5b4ca21673eb</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask"
                           HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}"
                           ApplicationType="usd"
                           Language="cs"
                           TemplatesPath=""
                           DebugInfoCommandLine=""
                           DebugInfoWorkingDir=""
                           IconImageList=""/>
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_7f052df551ec476c947c5b4ca21673eb
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            Dts.Variables["SQL_Source"].Value = Dts.Variables["SQL_Source"].Value.ToString() + " WHERE c.ModifiedDate > '" + Dts.Variables["VAR_LastImportDate"].Value.ToString() + "' ";

		    // Handy debugging technique, use message box to show the value
		    // Important! Make sure to comment out before sending package to production
		    // System.Windows.Forms.MessageBox.Show(Dts.Variables("SQL_Source").Value.ToString())

            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_7f052df551ec476c947c5b4ca21673eb</msb:CodeName>
		<msb:DisplayName>ST_7f052df551ec476c947c5b4ca21673eb</msb:DisplayName>
		<msb:ProjectId>{7CE985DE-20D0-42DE-9CDA-0A2828D58C9B}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_7f052df551ec476c947c5b4ca21673eb.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_7f052df551ec476c947c5b4ca21673eb")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_7f052df551ec476c947c5b4ca21673eb")]
[assembly: AssemblyCopyright("Copyright @  2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_7f052df551ec476c947c5b4ca21673eb.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_7f052df551ec476c947c5b4ca21673eb.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_7f052df551ec476c947c5b4ca21673eb.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_7f052df551ec476c947c5b4ca21673eb.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_7f052df551ec476c947c5b4ca21673eb.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_7f052df551ec476c947c5b4ca21673eb.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDANgJLFoAAAAAAAAAAOAAIiALATAAABAAAAAIAAAAAAAASi4A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAPgtAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAUA4AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAs
LgAAAAAAAEgAAAACAAUAOCEAAAgMAAABAAAAAAAAAEAtAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwBQB0AAAAAAAAAAIoEAAACm8RAAAKcgEAAHBvEgAACgIo
EAAACm8RAAAKcgEAAHBvEgAACm8TAAAKbxQAAApyFwAAcAIoEAAACm8RAAAKcksAAHBvEgAACm8T
AAAKbxQAAApycQAAcCgVAAAKbxYAAAoCKBAAAAoWbxcAAAoqHgIoGAAACioeAigZAAAKKq5+AQAA
BC0ecncAAHDQAwAAAigaAAAKbxsAAApzHAAACoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4D
AAAEKh4CKB0AAAoqLnMIAAAGgAMAAAQqAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAF
AGwAAADIAwAAI34AADQEAABsBQAAI1N0cmluZ3MAAAAAoAkAAOwAAAAjVVMAjAoAABAAAAAjR1VJ
RAAAAJwKAABsAQAAI0Jsb2IAAAAAAAAAAgAAAVcdoAEJAwAAAPoBMwAWAAABAAAAHgAAAAUAAAAG
AAAACQAAAAEAAAAdAAAAAgAAABAAAAACAAAAAwAAAAQAAAABAAAABAAAAAEAAAABAAAAAAB/AwEA
AAAAAAYAJQJPBAYAtAJPBAYAcQE8BA8AwwQAAAYAngH9AwYACAL9AwYA6QH9AwYAmwL9AwYARQL9
AwYAXgL9AwYAtQH9AwYA0AHsAgoAeQIuAwoA8AAuAwYAtwOwAwYAVAE8BAYAPQWwAwYAHwRvBAYA
DwToAw4AJAFpAw4AhQFpAw4ADAHTAwYAOQFPBAoAVwMuAxIABQWbABIAbgCbAAYACAOwAwYAuwCw
AwYAdwCwAwYAYwX9AwAAAAABAAAAAAABAAEAAQAQAMgDMQA5AAEAAQAAABAAdgTSBEUAAQADAAAB
EAAPBdIEWQADAAcAAwEAACgFAAA9AAQACgARALwDbwARAOAAcwARAF4AdwAGBikAewBWgBgFfgBW
gMAAfgBQIAAAAACGAM4DBgABANAgAAAAAIYYLwQGAAEA2CAAAAAAgxgvBAYAAQDgIAAAAACTCBsE
ggABAAwhAAAAAJMIyACHAAEAEyEAAAAAkwjUAIwAAQAbIQAAAACWCEQFkgACACIhAAAAAIYYLwQG
AAIAKiEAAAAAkRg1BJcAAgAAAAEA5gIJAC8EAQARAC8EBgAZAC8ECgApAC8EEAAxAC8EEAA5AC8E
EABBAC8EEABJAC8EEABRAC8EEABZAC8EEABhAC8EEABpAC8EBgCBAC8EBgCpAC8EFQC5AC8EBgBx
ACAFGwDBAAEFIADJAKcDJQDRANICKwCJAAYDLwDZADYFMwDRANwCOwDBAFAFAQBxAC8EBgCJAC8E
BgDhAIkAQADhAF8FRwCRAC8ETACxAC8EBgAIABQAZQAIABgAagApAHMA0gAuAAsAqgAuABMAswAu
ABsA0gAuACMA2wAuACsABAEuADMABAEuADsABAEuAEMA2wAuAEsACgEuAFMABAEuAFsAIQFDAGMA
agBJAHMA0gBhAHsAagBjAGsAagADAAEABAADAAAAHwSbAAAA6ACgAAAASAWlAAIABAADAAIABQAF
AAEABgAFAAIABwAHAASAAAABAAAAmBkzeAAAAAAAADEAAAAEAAAAAAAAAAAAAABTAFUAAAAAAA4A
AAAAAAAAAAAAAFwADwMAAAAABAAAAAAAAAAAAAAAUwCwAwAAAAAOAAAAAAAAAAAAAABcAAoAAAAA
AAAAAAABAAAAgAQAAAUAAgAAAAA8TW9kdWxlPgBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWRE
VFMAdmFsdWVfXwBTVF83ZjA1MmRmNTUxZWM0NzZjOTQ3YzViNGNhMjE2NzNlYgBtc2NvcmxpYgBk
ZWZhdWx0SW5zdGFuY2UAVmFyaWFibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5k
bGUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBUeXBlAEZhaWx1cmUAZ2V0X0N1bHR1
cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFz
ZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdl
bmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVB
dHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUA
QXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2Vt
Ymx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENv
bXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFz
c2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0
ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUA
Z2V0X1ZhbHVlAHNldF9WYWx1ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3Ry
aW5nAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0
cy5UYXNrcy5TY3JpcHRUYXNrAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2Rl
bABTVF83ZjA1MmRmNTUxZWM0NzZjOTQ3YzViNGNhMjE2NzNlYi5kbGwAZ2V0X0l0ZW0AU3lzdGVt
AEVudW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0u
R2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBDdWx0dXJlSW5mbwBnZXRfUmVzb3VyY2VN
YW5hZ2VyAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29t
cGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUXzdmMDUyZGY1NTFlYzQ3NmM5NDdjNWI0
Y2EyMTY3M2ViLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBT
VF83ZjA1MmRmNTUxZWM0NzZjOTQ3YzViNGNhMjE2NzNlYi5Qcm9wZXJ0aWVzAGdldF9WYXJpYWJs
ZXMAU2V0dGluZ3MAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAQ29uY2F0AE9iamVjdABn
ZXRfRGVmYXVsdABzZXRfVGFza1Jlc3VsdABnZXRfQXNzZW1ibHkAABVTAFEATABfAFMAbwB1AHIA
YwBlAAAzIABXAEgARQBSAEUAIABjAC4ATQBvAGQAaQBmAGkAZQBkAEQAYQB0AGUAIAA+ACAAJwAB
JVYAQQBSAF8ATABhAHMAdABJAG0AcABvAHIAdABEAGEAdABlAAAFJwAgAAFxUwBUAF8ANwBmADAA
NQAyAGQAZgA1ADUAMQBlAGMANAA3ADYAYwA5ADQANwBjADUAYgA0AGMAYQAyADEANgA3ADMAZQBi
AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAAADea1EchFkNQ77L
jYss2aIDAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFRBCAAEmEEIAASZQUgARJpHAMgABwDIAAO
BwAEDg4ODg4EIAEBHAYAARJxEXUEIAASeQYgAgEOEnkIt3pcVhk04IkIiYRdzYCAzJEEAAAAAAQB
AAAAAwYSSQMGEk0DBhIQAgYIAwYRFAQAABJJBAAAEk0FAAEBEk0EAAASEAMAAAEECAASSQQIABJN
BAgAEhAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEA
I1NUXzdmMDUyZGY1NTFlYzQ3NmM5NDdjNWI0Y2EyMTY3M2ViAAAFAQAAAAAWAQARQ29weXJpZ2h0
IEAgIDIwMTcAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNQEAVA4URnJhbWV3b3JrRGlz
cGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC41ALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291
cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1u
ZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMu
UnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAAAgLgAAAAAAAAAAAAA6LgAA
ACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALC4AAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVl
LmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQAzeJgZAAABADN4mBk/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAA
MAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABh
AG4AeQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4A
AAAAAFMAVABfADcAZgAwADUAMgBkAGYANQA1ADEAZQBjADQANwA2AGMAOQA0ADcAYwA1AGIANABj
AGEAMgAxADYANwAzAGUAYgAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAA
LgA2ADUANQAyAC4AMwAwADcANwAxAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAA
AFMAVABfADcAZgAwADUAMgBkAGYANQA1ADEAZQBjADQANwA2AGMAOQA0ADcAYwA1AGIANABjAGEA
MgAxADYANwAzAGUAYgAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0
AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMQA3AAAAKgABAAEATABlAGcAYQBsAFQA
cgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBu
AGEAbQBlAAAAUwBUAF8ANwBmADAANQAyAGQAZgA1ADUAMQBlAGMANAA3ADYAYwA5ADQANwBjADUA
YgA0AGMAYQAyADEANgA3ADMAZQBiAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBt
AGUAAAAAAFMAVABfADcAZgAwADUAMgBkAGYANQA1ADEAZQBjADQANwA2AGMAOQA0ADcAYwA1AGIA
NABjAGEAMgAxADYANwAzAGUAYgAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4ANgA1ADUAMgAuADMAMAA3ADcAMQAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAA
VgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANgA1ADUAMgAuADMAMAA3ADcAMQAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAABMPgAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\DimCustomer - SQL - Get last update"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{36269BBB-DC5B-4139-A202-8FFB3ACF4327}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="DimCustomer - SQL - Get last update"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{B2D4726A-E3A4-4D6E-B4D0-1AB49E8A20D3}"
          SQLTask:SqlStatementSource="SELECT CAST('2005-01-01 00:00:00' AS DATETIME) AS LastImportDate"
          SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::VAR_LastImportDate" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\DimCustomer - SQL - Reset Staging"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{87C3E329-C51A-4D0E-92F3-4D99993000F3}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="DimCustomer - SQL - Reset Staging"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:DTSID="{B2C6DDA3-F72A-4BE1-9EBE-C0BCD2212211}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="SQL_ResetStaging">
          <DTS:VariableValue
            DTS:DataType="8">DELETE FROM Staging.DimCustomer</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{B2D4726A-E3A4-4D6E-B4D0-1AB49E8A20D3}"
          SQLTask:SqlStmtSourceType="Variable"
          SQLTask:SqlStatementSource="User::SQL_ResetStaging" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\DimCustomer - SQL - Update from Staging"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{813E03DC-84DC-41A8-A05F-ACB05A0746C9}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="DimCustomer - SQL - Update from Staging"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{B2D4726A-E3A4-4D6E-B4D0-1AB49E8A20D3}"
          SQLTask:SqlStatementSource="UPDATE BI&#xA;  SET BI.CustomerID = s.CustomerID&#xA;    , BI.AddressID = s.AddressID&#xA;    , BI.CountryRegion = s.CountryRegion&#xA;    , BI.StateProvince = s.StateProvince&#xA;    , BI.City = s.City&#xA;    , BI.PersonName = s.PersonName&#xA; FROM BI.DimCustomer bi&#xA; JOIN Staging.DimCustomer s ON BI.DimCustomerID = s.DimCustomerID&#xA;     " xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{1D9D1B17-898F-40F4-9B5D-6D8C1722CBEF}"
      DTS:From="Package\DimCustomer - SQL - Reset Staging"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\DimCustomer - DFT - Add rows to Customer Dimension" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{A41CAB1A-5E27-42DD-9F0D-0C523FA26E02}"
      DTS:From="Package\DimCustomer - DFT - Add rows to Customer Dimension"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\DimCustomer - SQL - Update from Staging" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{200A3FD2-BC5B-4359-B1F3-5D057E595129}"
      DTS:From="Package\DimCustomer - SQL - Get last update"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\DimCustomer - SQL - Add where clause to SQL_Source variable" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{2DBAA1CF-D23D-495D-9001-F9A1862C36A1}"
      DTS:From="Package\DimCustomer - SQL - Add where clause to SQL_Source variable"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\DimCustomer - SQL - Reset Staging" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssge="clr-namespace:Microsoft.SqlServer.Graph.Extended;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
        <NodeLayout
          Size="290,35"
          Id="Package\DimCustomer - DFT - Add rows to Customer Dimension"
          TopLeft="7.5,246.801886792453" />
        <NodeLayout
          Size="305,42"
          Id="Package\DimCustomer - SQL - Add where clause to SQL_Source variable"
          TopLeft="9,100" />
        <NodeLayout
          Size="254,42"
          Id="Package\DimCustomer - SQL - Get last update"
          TopLeft="29.5,33.8207547169811" />
        <NodeLayout
          Size="290,35"
          Id="Package\DimCustomer - SQL - Reset Staging"
          TopLeft="7.5,175.141509433962" />
        <NodeLayout
          Size="280,42"
          Id="Package\DimCustomer - SQL - Update from Staging"
          TopLeft="2.5,377.537735849057" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="152.443396226415,210.27358490566">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0.0377358490565882,36.5283018867925"
              Start="0,0"
              End="0.0377358490565882,29.0283018867925">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.2641509433962" />
                  <mssgle:LineSegment
                    End="0.0377358490565882,18.2641509433962" />
                  <mssgle:LineSegment
                    End="0.0377358490565882,29.0283018867925" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="159,75.8207547169811">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,24.1792452830189"
              Start="0,0"
              End="0,16.6792452830189">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.6792452830189" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="161.5,142">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-9,33.141509433962"
              Start="0,0"
              End="-9,25.641509433962">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12.570754716981" />
                  <mssgle:CubicBezierSegment
                    Point1="0,12.570754716981"
                    Point2="0,16.570754716981"
                    Point3="-4,16.570754716981" />
                  <mssgle:LineSegment
                    End="-5,16.570754716981" />
                  <mssgle:CubicBezierSegment
                    Point1="-5,16.570754716981"
                    Point2="-9,16.570754716981"
                    Point3="-9,20.570754716981" />
                  <mssgle:LineSegment
                    End="-9,25.641509433962" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <AnnotationLayout
          Text="Normally we'd store the last import date in a&#xA;table somewhere, or get it by comparing the &#xA;max import date in the dim to the last modified&#xA;date in the source. Here we're faking it by using&#xA;a static value."
          ParentId="Package"
          Size="640,89"
          Id="df6dddb9-c488-42d9-8973-1b6387dbfdc0"
          TopLeft="332.556603773585,5.5">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Tahoma"
              Size="10.8"
              Color="#FF080000">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
        <AnnotationLayout
          Text="Here we use some vb script to modify the variable&#xA;used in the DFT to read the source data. We add&#xA;a where clause using the date we just retrieved."
          ParentId="Package"
          Size="621,63"
          Id="c092884e-77d7-4b02-a432-c9e393746fdd"
          TopLeft="332.556603773585,100.311320754717">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Tahoma"
              Size="10.8"
              Color="#FF080000">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
        <AnnotationLayout
          Text="We reset the staging area here, rather than after&#xA;so that if there is an error it's easier to debug"
          ParentId="Package"
          Size="596,50"
          Id="33810088-111b-4e53-bb23-db3e2327b864"
          TopLeft="332.556603773585,173.028301886792">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Tahoma"
              Size="10.8"
              Color="#FF080000">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
        <AnnotationLayout
          Text="Read the source with rows to be updated"
          ParentId="Package"
          Size="226,37"
          Id="cafe4ab9-5a00-4b0f-8eb8-c6b8a05380c4"
          TopLeft="332.556603773585,249.707547169811">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Tahoma"
              Size="10.8"
              Color="#FF080000">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
        <AnnotationLayout
          Text="Inserts are faster so we insert rows to a staging &#xA;area in the DFT then do a mass update via SQL&#xA;here"
          ParentId="Package"
          Size="606,63"
          Id="4fe880b1-ccd0-4bb0-8584-474f0029c89e"
          TopLeft="332.556603773585,365.764150943396">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Tahoma"
              Size="10.8"
              Color="#FF080000">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="152.5,281.801886792453">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-10,95.735849056604"
              Start="0,0"
              End="-10,88.235849056604">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,43.867924528302" />
                  <mssgle:CubicBezierSegment
                    Point1="0,43.867924528302"
                    Point2="0,47.867924528302"
                    Point3="-4,47.867924528302" />
                  <mssgle:LineSegment
                    End="-6,47.867924528302" />
                  <mssgle:CubicBezierSegment
                    Point1="-6,47.867924528302"
                    Point2="-10,47.867924528302"
                    Point3="-10,51.867924528302" />
                  <mssgle:LineSegment
                    End="-10,88.235849056604" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\DimCustomer - DFT - Add rows to Customer Dimension">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph" xmlns:mssge="clr-namespace:Microsoft.SqlServer.Graph.Extended;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
        <NodeLayout
          Size="366,42"
          Id="Package\DimCustomer - DFT - Add rows to Customer Dimension\SRC - Customer Data"
          TopLeft="70.9716981132075,5.5" />
        <NodeLayout
          Size="289,42"
          Id="Package\DimCustomer - DFT - Add rows to Customer Dimension\DST - Record exists, stage it for later update"
          TopLeft="5.5,214.745283018868" />
        <NodeLayout
          Size="236,35"
          Id="Package\DimCustomer - DFT - Add rows to Customer Dimension\DST - New record, insert it"
          TopLeft="316.179245283019,214.745283018868" />
        <NodeLayout
          Size="355,35"
          Id="Package\DimCustomer - DFT - Add rows to Customer Dimension\Lookup - See if customer data already in the dimension"
          TopLeft="79.7264150943396,90.9716981132076" />
        <EdgeLayout
          Id="Package\DimCustomer - DFT - Add rows to Customer Dimension.Paths[Lookup No Match Output]"
          TopLeft="319.688679245283,126.103773584906">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="114.301886792453,88.6415094339623"
              Start="0,0"
              End="114.301886792453,81.1415094339623">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,44.3018867924528" />
                  <mssgle:LineSegment
                    End="114.301886792453,44.3018867924528" />
                  <mssgle:LineSegment
                    End="114.301886792453,81.1415094339623" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="1.3445566774765,49.3018867924528,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\DimCustomer - DFT - Add rows to Customer Dimension.Paths[Lookup Match Output]"
          TopLeft="199.393081761006,125.971698113208">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-49.3930817610062,88.7735849056604"
              Start="0,0"
              End="-49.3930817610062,81.2735849056604">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.7484206182076" />
                  <mssgle:CubicBezierSegment
                    Point1="0,31.7484206182076"
                    Point2="0,35.7484206182076"
                    Point3="-4,35.7484206182076" />
                  <mssgle:LineSegment
                    End="-45.3930817610062,35.7484206182076" />
                  <mssgle:CubicBezierSegment
                    Point1="-45.3930817610062,35.7484206182076"
                    Point2="-49.3930817610062,35.7484206182076"
                    Point3="-49.3930817610062,39.7484206182076" />
                  <mssgle:LineSegment
                    End="-49.3930817610062,81.2735849056604" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-72.8879275992531,40.7484206182076,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\DimCustomer - DFT - Add rows to Customer Dimension.Paths[OLE DB Source Output]"
          TopLeft="255.599056603774,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,43.4716981132076"
              Start="0,0"
              End="0,35.9716981132076">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,35.9716981132076" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <AnnotationLayout
          Text="This sources uses a SQL Statement from a &#xA;variable which was modified to add a where &#xA;clause to only pull records from a last update date"
          ParentId="Package\DimCustomer - DFT - Add rows to Customer Dimension"
          Size="769,63"
          Id="1a380cf3-baa6-4acc-a5d1-4307dd0ac900"
          TopLeft="472.707547169811,11.0849056603774">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Tahoma"
              Size="10.8"
              Color="#FF080000">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
        <AnnotationLayout
          Text="Now we need to see if this row is already in the&#xA;dim table and needs updating (match output) or&#xA;is brand new and needs to be inserted (no match)"
          ParentId="Package\DimCustomer - DFT - Add rows to Customer Dimension"
          Size="907,63"
          Id="d538555e-a90e-471a-8700-46edefa3eea2"
          TopLeft="473.537735849057,90.7830188679245">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Tahoma"
              Size="10.8"
              Color="#FF080000">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\DimCustomer - DFT - Add rows to Customer Dimension\SRC - Customer Data">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\DimCustomer - DFT - Add rows to Customer Dimension\DST - Record exists, stage it for later update">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\DimCustomer - DFT - Add rows to Customer Dimension\DST - New record, insert it">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\DimCustomer - DFT - Add rows to Customer Dimension\Lookup - See if customer data already in the dimension">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[BI].[DimCustomer]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>