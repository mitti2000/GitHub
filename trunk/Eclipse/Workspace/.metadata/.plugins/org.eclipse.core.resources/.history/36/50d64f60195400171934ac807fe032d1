package ch.mitdom.compresstutorial;

import javax.swing.SwingWorker;

/**
 * Der DecompressorWorker dient dazu, dass der Dekompressionsvorgang in einem
 * seperaten Thread läuft und somit das GUI während der Laufzeit geupdatet werden kann.
 * Die Klasse leitet von SwingWorker ab.
 */
public class DecompressorWorker extends SwingWorker {
	private DecompressorGui gui;
	private IDecompressor decompressor;
	
	/**
	 * Der Konstruktor erwartet ein GUI vom Typ DecompressorGui und einen Decompressor
	 * @param gui GUI vom Typ DecompressorGui
	 * @param usedDecompressor Compressor vom Typ ICompressor
	 */
	public DecompressorWorker(DecompressorGui gui, IDecompressor usedDecompressor){
		this.gui = gui;
		this.decompressor = usedDecompressor;
	}

	@Override
	protected Object doInBackground() throws Exception {
		if(decompressor.decompress(decompressorGui)){
			decompressorGui.setBtnExecute(true);
		}
		
		else{
			decompressorGui.setBtnExecute(false);
		}
		return null;
	}
	
	protected void updateProcess(int progress, String filename, int length){
		decompressorGui.setProgress(progress, filename, length);
	}
}
