<UserControl x:Class="WpfExercise.View.CustomersView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:viewModel="clr-namespace:WpfExercise.View_Model"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
             xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" 
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.DataContext>
        <viewModel:CustomersViewModel/>
    </UserControl.DataContext>
    <UserControl.Resources>
        <Style TargetType="FrameworkElement">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
                            Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type FrameworkElement}}" />
        <Style TargetType="{x:Type DatePicker}" BasedOn="{StaticResource {x:Type FrameworkElement}}" />
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="25" />
            <ColumnDefinition Width="25" />
            <ColumnDefinition Width="1*" />
            <ColumnDefinition Width="2*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="25" />
            <RowDefinition Height="25" />
            <RowDefinition Height="25" />
            <RowDefinition Height="25" />
            <RowDefinition Height="25" />
            <RowDefinition Height="25" />
            <RowDefinition Height="25" />
            <RowDefinition Height="10" />
            <RowDefinition Height="*" />
            <RowDefinition Height="10" />
            <RowDefinition Height="40" />
            <RowDefinition Height="10" />
        </Grid.RowDefinitions>
        <Label Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="3" Target="{Binding ElementName=txtCustomerID}">_CustomerID:</Label>
        <TextBox x:Name="txtCustomerID" Grid.Column="3" Grid.Row="0"
                 Text="{Binding CurrentCustomer.CustomerID, ValidatesOnDataErrors=True, NotifyOnValidationError=True}" />
        <Label Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="3" Target="{Binding ElementName=txtCompanyName}">C_ompanyname:</Label>
        <TextBox x:Name="txtCompanyName" Grid.Column="3" Grid.Row="1"
                 Text="{Binding CurrentCustomer.CompanyName, ValidatesOnDataErrors=True, NotifyOnValidationError=True}" />
        <Label Grid.Column="0" Grid.Row="2" Grid.ColumnSpan="3" Target="{Binding ElementName=txtContactName}">Co_ntactname:</Label>
        <TextBox x:Name="txtContactName" Grid.Column="3" Grid.Row="2"
                 Text="{Binding CurrentCustomer.ContactName, ValidatesOnDataErrors=True, NotifyOnValidationError=True}" />
        <Label Grid.Column="0" Grid.Row="3" Grid.ColumnSpan="3" Target="{Binding ElementName=txtContactTitle}">Con_tacttitle:</Label>
        <TextBox x:Name="txtContactTitle" Grid.Column="3" Grid.Row="3"
                 Text="{Binding CurrentCustomer.ContactTitle, ValidatesOnDataErrors=True, NotifyOnValidationError=True}" />
        <Label Grid.Column="0" Grid.Row="4" Grid.ColumnSpan="3" Target="{Binding ElementName=txtPhone}">_Phone:</Label>
        <TextBox x:Name="txtPhone" Grid.Column="3" Grid.Row="4"
                 Text="{Binding CurrentCustomer.Phone, ValidatesOnDataErrors=True, NotifyOnValidationError=True}" />
        <Label Grid.Column="0" Grid.Row="5" Grid.ColumnSpan="3" Target="{Binding ElementName=txtFax}">_Fax:</Label>
        <TextBox x:Name="txtFax" Grid.Column="3" Grid.Row="5"
                 Text="{Binding CurrentCustomer.Fax, ValidatesOnDataErrors=True, NotifyOnValidationError=True}" />
        <Label Grid.Column="0" Grid.Row="6" Grid.ColumnSpan="3" Target="{Binding ElementName=datBirthday}">_Birthday:</Label>
        <DatePicker x:Name="datBirthday" Grid.Column="3" Grid.Row="6"
                    SelectedDate="{Binding CurrentCustomer.Birthday, ValidatesOnDataErrors=True, NotifyOnValidationError=True}" />

        <ListBox Grid.Column="0" Grid.Row="8" Grid.ColumnSpan="4" x:Name="listbox"                 
                 ItemsSource="{Binding Customers}"
                 SelectedItem="{Binding CurrentCustomer, Mode=TwoWay}"
                 >
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Vertical">
                        <TextBlock Text="{Binding CustomerID}" />
                        <TextBlock Text="{Binding CompanyName}" />
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{Binding ContactName}" />
                            <TextBlock Text=" (" />
                            <TextBlock Text="{Binding ContactTitle}" />
                            <TextBlock Text=")" />
                        </StackPanel>
                        <TextBlock Text="{Binding Phone}" />
                        <TextBlock Text="{Binding Birthday, StringFormat=d, ConverterCulture=de-CH}" />
                    </StackPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>

        <Button Grid.Row="10" Grid.Column="0" Grid.ColumnSpan="3" Width="40" Height="40" >
            Close
            <Button.Template>

                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Ellipse Name="OuterRing" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"
                                 Fill="LawnGreen" />
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="OuterRing" Property="Fill" Value="LightGreen" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="OuterRing" Property="Fill" Value="Red" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="Click">
                    <ei:CallMethodAction MethodName="Close"
                                         TargetObject="{Binding RelativeSource={RelativeSource
                                                                    Mode=FindAncestor, AncestorType=Window}}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </Button>
        <Button Grid.Row="10" Grid.Column="3" Width="40" Height="40" 
                Command="{Binding SaveCommand}">
            Save
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Ellipse Name="OuterRing" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"
                                 Fill="LawnGreen" />
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="OuterRing" Property="Fill" Value="LightGreen" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="OuterRing" Property="Fill" Value="Red" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
           
        </Button>
    </Grid>
</UserControl>
